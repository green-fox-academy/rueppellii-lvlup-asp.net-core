// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using rueppellii_lvlup_asp.net_core.Data;

namespace rueppellii_lvlup_asp.net_core.Migrations
{
    [DbContext(typeof(LvlUpDbContext))]
    [Migration("20190208090144_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.1-servicing-10028")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("rueppellii_lvlup_asp.net_core.Models.Archetype", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("Archetypes");
                });

            modelBuilder.Entity("rueppellii_lvlup_asp.net_core.Models.ArchetypeLevel", b =>
                {
                    b.Property<long>("ArchetypeId");

                    b.Property<long>("LevelId");

                    b.HasKey("ArchetypeId", "LevelId");

                    b.HasIndex("LevelId");

                    b.ToTable("ArchetypeLevels");
                });

            modelBuilder.Entity("rueppellii_lvlup_asp.net_core.Models.Badge", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("Tag")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("Version")
                        .IsRequired()
                        .HasMaxLength(15);

                    b.HasKey("Id");

                    b.ToTable("Badges");
                });

            modelBuilder.Entity("rueppellii_lvlup_asp.net_core.Models.Level", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("BadgeId");

                    b.Property<int>("BadgeLevel");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500);

                    b.HasKey("Id");

                    b.HasIndex("BadgeId");

                    b.ToTable("Levels");
                });

            modelBuilder.Entity("rueppellii_lvlup_asp.net_core.Models.Pitch", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("BadgeId");

                    b.Property<long?>("LevelId");

                    b.Property<int>("OldLevel");

                    b.Property<string>("PitchMessage")
                        .HasMaxLength(200);

                    b.Property<int>("PitchedLevel");

                    b.Property<DateTime>("Timestamp")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate();

                    b.Property<long?>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("BadgeId");

                    b.HasIndex("LevelId");

                    b.HasIndex("UserId");

                    b.ToTable("Pitches");
                });

            modelBuilder.Entity("rueppellii_lvlup_asp.net_core.Models.Review", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Message")
                        .HasMaxLength(500);

                    b.Property<long?>("PitchId");

                    b.Property<bool>("PitchStatus");

                    b.Property<long?>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("PitchId");

                    b.HasIndex("UserId");

                    b.ToTable("Reviews");
                });

            modelBuilder.Entity("rueppellii_lvlup_asp.net_core.Models.User", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("Pic");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("rueppellii_lvlup_asp.net_core.Models.UserLevel", b =>
                {
                    b.Property<long>("UserId");

                    b.Property<long>("LevelId");

                    b.HasKey("UserId", "LevelId");

                    b.HasIndex("LevelId");

                    b.ToTable("UserLevels");
                });

            modelBuilder.Entity("rueppellii_lvlup_asp.net_core.Models.ArchetypeLevel", b =>
                {
                    b.HasOne("rueppellii_lvlup_asp.net_core.Models.Archetype", "Archetype")
                        .WithMany("ArchetypeLevels")
                        .HasForeignKey("ArchetypeId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("rueppellii_lvlup_asp.net_core.Models.Level", "Level")
                        .WithMany("archetypeLevels")
                        .HasForeignKey("LevelId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("rueppellii_lvlup_asp.net_core.Models.Level", b =>
                {
                    b.HasOne("rueppellii_lvlup_asp.net_core.Models.Badge", "Badge")
                        .WithMany("Levels")
                        .HasForeignKey("BadgeId");
                });

            modelBuilder.Entity("rueppellii_lvlup_asp.net_core.Models.Pitch", b =>
                {
                    b.HasOne("rueppellii_lvlup_asp.net_core.Models.Badge", "Badge")
                        .WithMany("Pitches")
                        .HasForeignKey("BadgeId");

                    b.HasOne("rueppellii_lvlup_asp.net_core.Models.Level", "Level")
                        .WithMany("Pitches")
                        .HasForeignKey("LevelId");

                    b.HasOne("rueppellii_lvlup_asp.net_core.Models.User", "User")
                        .WithMany("Pitches")
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("rueppellii_lvlup_asp.net_core.Models.Review", b =>
                {
                    b.HasOne("rueppellii_lvlup_asp.net_core.Models.Pitch", "Pitch")
                        .WithMany("Reviewers")
                        .HasForeignKey("PitchId");

                    b.HasOne("rueppellii_lvlup_asp.net_core.Models.User", "User")
                        .WithMany("Reviews")
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("rueppellii_lvlup_asp.net_core.Models.UserLevel", b =>
                {
                    b.HasOne("rueppellii_lvlup_asp.net_core.Models.Level", "Level")
                        .WithMany("UserLevels")
                        .HasForeignKey("LevelId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("rueppellii_lvlup_asp.net_core.Models.User", "User")
                        .WithMany("UserLevels")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
